// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// Prisma Client Generator
datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Database configuration
generator client {
    provider = "prisma-client-js"
}

enum TokenType {
    VERIFICATION_EMAIL
    RESET_PASS
}

enum RoleName {
    MANAGER
    CLIENT
}

model User {
    id        Int      @id @default(autoincrement())
    uuid      String   @unique @default(uuid()) @db.Uuid
    firstName String
    lastName  String
    username  String
    email     String   @unique @db.VarChar(255)
    password  String   @db.VarChar(100)
    addresses String
    roleId    Int      @default(2)
    isActive  Boolean  @default(false) // Changes when user confirms email
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    role               UserRole            @relation(fields: [roleId], references: [id])
    verificationTokens VerificationToken[]

    @@index([email, id, uuid])
}

model UserRole {
    id        Int      @id @default(autoincrement())
    uuid      String   @unique @default(uuid()) @db.Uuid
    name      RoleName
    createdAt DateTime @default(now())

    users User[]
}

model VerificationToken {
    id         String   @id @default(uuid()) @db.Uuid
    token      String   @unique
    id_user    String   @db.Uuid
    token_type Int
    is_used    Boolean
    expired_at DateTime
    created_at DateTime @default(now())
    updated_at DateTime @default(now()) @updatedAt

    user      User             @relation(fields: [id_user], references: [uuid])
    tokenType VerificationType @relation(fields: [token_type], references: [id])

    @@index([id_user])
    @@index([expired_at])
}

model VerificationType {
    id        Int       @id @default(autoincrement())
    uuid      String    @unique @default(uuid()) @db.Uuid
    tokenType TokenType
    createdAt DateTime  @default(now())
    updatedAt DateTime  @default(now()) @updatedAt

    verificationTokens VerificationToken[]
}
